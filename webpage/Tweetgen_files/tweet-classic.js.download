// JavaScript for Tweetgen Tweet Generator
// Requires jQuery
// BETA-0.5.4 - August 12, 2021

$("#version").html("BETA-0.5.4");

const maxCharsQuery = /(\?|&)maxChars=([0-9]+)/i.exec(document.URL); // This implements changing the max character count via the URL. e.g. /tweet-classic.html?maxChars=140
const maxChars = (maxCharsQuery ? Number(maxCharsQuery[2]) : 280);
$("#maxChars").html(maxChars);
$("#tweetTextInput").attr("maxlength", maxChars);
var useTwemoji = true;

function escapeHtml(text) {
    var map = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      // '"': '&quot;',
      // "'": '&#039;' (causes regex issues)
    };
  
    return text.replace(/[&<>]/g, function(m) { return map[m]; });
}

// function to abbreviate numbers
// thanks stackoverflow
function abbrNumber(str) {
    var n = Number(str);
    if (n < 1e3) return n;
    if (n >= 1e3 && n < 1e6) return +(n / 1e3).toFixed(1) + "K";
    if (n >= 1e6 && n < 1e9) return +(n / 1e6).toFixed(1) + "M";
    if (n >= 1e9 && n < 1e12) return +(n / 1e9).toFixed(1) + "B";
}

function ampmTime(time) {
    let ampm;
    let hr;

    let splitTime = time.split(":");
    let hrIn = Number(splitTime[0]);
    let min = splitTime[1];

    if (hrIn >= 12) {
        ampm = "PM";
    } else {
        ampm = "AM";
    }

    // convert 24 hr time to 12 hr time
    if (hrIn == 0) {
        hr = 12;
    } else if (hrIn >= 13) {
        hr = hrIn - 12;
    } else {
        hr = hrIn - 0;
    }

    return hr + ":" + min + " " + ampm;
}

function parseTime(num) {
    // Converts, for example, 7 to "07" to use as a time value.
    let result;
    if (num < 10) {
        result = "0" + num;
    } else {
        result = String(num);
    }
    return result;
}

// theme
function changeTheme() {
    let v = $("input[type=radio][name=theme]:checked").val();
    if (v == "dim") {
        $("#tweetContainer").attr("theme", "dim");
    } else if (v == "dark") {
        $("#tweetContainer").attr("theme", "dark");
    } else {
        $("#tweetContainer").attr("theme", "light");
    }
}

// font
function changeFont() {
    switch ($("#fontSelect input:checked").val()) {
        case "system":
            $("#tweetContainer").addClass("system-font");
            $("#tweetContainer").removeClass("chirp-font ui");
            return;
        case "inter":
            $("#tweetContainer").addClass("ui");
            $("#tweetContainer").removeClass("chirp-font system-font");
            return;
        default:
            $("#tweetContainer").addClass("chirp-font");
            $("#tweetContainer").removeClass("system-font ui");
            return;
    }
}

// emoji
function changeEmoji() {
    switch ($("#emojiSelect input:checked").val()) {
        case "system":
            useTwemoji = false;
            for (let element of $("#tweetContainer .emoji")) {
                let emoji = element.getAttribute("alt");
                element.outerHTML = emoji;
            }
            break;
        default:
            useTwemoji = true;
            twemoji.parse(document.getElementById("tweetContainer"), {base: "/c/twemoji/assets/"});
            break;
    }
}

function addPfpError() {
    $("#pfpError").show();
}
function removePfpError() {
    $("#pfpError").hide();
}

function addPfpUrlError() {
    $("#pfpUrlError").show();
}
function removePfpUrlError() {
    $("#pfpUrlError").hide();
}

// pfp
function resetPfp() {
    $("#pfpInput").val("");
    $("#pfp").attr("src", "/c/default-pfp.png");
}

function handlePfpFiles() {
    let file = document.getElementById("pfpInput").files[0];
    if (file) {
        let fileBlob = URL.createObjectURL(file);
        $("#pfp").attr("src", fileBlob);
    } else {
        $("#pfp").attr("src", "/c/default-pfp.png");
    }
}

function handlePfpUrl() {
    if ($("#pfpURL").val() == "") {
        removePfpUrlError();
        return;
    }
    if (document.getElementById("pfpURL").validity.valid == false) {
        addPfpUrlError();
        return;
    }
    var pfpUrl = $("#pfpURL").val();
    if (pfpUrl.match(/\.(jpeg|jpg|png)/) != null) {
        removePfpUrlError();
        $("#pfp").attr("src", pfpUrl);
    } else {
        addPfpUrlError();
        return;
    }
}

// name
function handleName() {
    var nameIn = $("#nameInput").val();
    var nameOut = escapeHtml(nameIn);
    $("#name").html(nameOut);
    if (useTwemoji) twemoji.parse(document.getElementById("name"), {base: "/c/twemoji/assets/"});
}

// username
function handleUsername() {
    if (document.getElementById("usernameInput").validity.valid == false) {
        $("#unameError").css("color", "red");
    } else {
        $("#unameError").css("color", "rgb(109, 117, 125)");
    }

    var usernameOutput = escapeHtml($("#usernameInput").val());
    $("#username").html(usernameOutput);
    if (useTwemoji) twemoji.parse(document.getElementById("username"), {base: "/c/twemoji/assets/"});
}

// verified
function verifiedUser() {
    if ($("#verifiedInput").prop("checked") == true) {
        $("#verified").show();
    } else {
        $("#verified").hide();
    }
}

// tweet content, character counter, and linking
document.getElementById("tweetTextInput").oninput = function () {
    document.getElementById('charcount').innerHTML = this.value.length;
    var parsed = escapeHtml(this.value);
    parsed = tgAutoLink(parsed);
    $("#tweetText").html(parsed);
    if (useTwemoji) twemoji.parse(document.getElementById("tweetText"), {base: "/c/twemoji/assets/"});
}

// image
function removeImg() {
    $("#imgInput").val("");
    $("#imgContainer").hide();
    $("#tweetImg").attr("src", "");
}

function handleImgFiles() {
    let file = document.getElementById("imgInput").files[0];
    if (file) {
        let fileBlob = URL.createObjectURL(file);
        $("#tweetImg").attr("src", fileBlob);
        $("#imgContainer").show();
    } else {
        removeImg();
    }
}

function handleImgUrl() {
    if ($("#imgURL").val() == "") {
        removeImgUrlError();
        return;
    } 
    if (document.getElementById("imgURL").validity.valid == false) {
        addImgUrlError();
        return;
    }
    var imgUrl = $("#imgURL").val();
    if (imgUrl.match(/\.(jpeg|jpg|png)/) != null) {
        removeImgUrlError();
        $("#img").attr("src", imgUrl);
        showImg();
    } else {
        addImgUrlError();
        return;
    }
}

// time
function handleTime() {
    $("#timeOutput").html(ampmTime($("#timeInput").val()));
}

// day
function handleDay() {
    let day = Number($("#dayInput").val());
    if (day < 1 || day > 99 || !Number.isInteger(day)) {
        $("#dayError").show();
    } else {
        $("#dayError").hide();
    }
    $("#dayOutput").html(day);
}

// month
function handleMonth() {
    var month = $("#monthInput").val();
    if (month === "Month") {
        return;
    } else {
        $("#monthOutput").html(month);
    }
}

// year
function handleYear() {
    if (document.getElementById("yearInput").validity.valid == false) {
        $("#yearError").show();
    } else {
        $("#yearError").hide();
    }
    let year = Number($("#yearInput").val());
    $("#yearOutput").html(year);
}


// current time/date button
function getCurrentDate() {
    let d = new Date();
    let time = parseTime(d.getHours()) + ":" + parseTime(d.getMinutes());
    let day = d.getDate();
    let monthNum = d.getMonth();
    let year = d.getFullYear();

    $("#timeInput").val(time);
    $("#dayInput").val(day);
    $("#yearInput").val(year);

    switch (monthNum) {
        case 0: $("#monthInput").val("Jan"); break;
        case 1: $("#monthInput").val("Feb"); break;
        case 2: $("#monthInput").val("Mar"); break;
        case 3: $("#monthInput").val("Apr"); break;
        case 4: $("#monthInput").val("May"); break;
        case 5: $("#monthInput").val("Jun"); break;
        case 6: $("#monthInput").val("Jul"); break;
        case 7: $("#monthInput").val("Aug"); break;
        case 8: $("#monthInput").val("Sep"); break;
        case 9: $("#monthInput").val("Oct"); break;
        case 10: $("#monthInput").val("Nov"); break;
        case 11: $("#monthInput").val("Dec"); break;
    }

    handleTime();
    handleDay();
    handleMonth();
    handleYear();
}

// like/retweet stuff
function checkNums() {
    if ($("#retweetDisplay").css("display") == "none" && $("#likeDisplay").css("display") == "none" && $("#quotesDisplay").css("display") == "none") {
        $("#tweetNumbers").hide();
    } else {
        $("#tweetNumbers").show();
    }
}

function addRtLikeError() {
    $("#rtLikeError").css("color", "red");
}
function removeRtLikeError() {
    $("#rtLikeError").css("color", "");
}

// retweets
function handleRetweet() {
    let numIn = $("#retweetInput").val();
    if (numIn == "0" || numIn == "") {
        $("#retweetsDisplay").hide();
        checkNums();
        return;
    }
    if (document.getElementById("retweetInput").validity.valid == false) {
        addRtLikeError();
    } else {
        removeRtLikeError();
    }

    let numOut = abbrNumber(numIn);
    $("#retweets").html(numOut);
    if (numOut == "1") {
        $("#retweetsPlural").hide();
    } else {
        $("#retweetsPlural").show();
    }
    $("#retweetsDisplay").show();
    checkNums();
}

// quote tweets
function handleQuotes() {
    let numIn = $("#quotesInput").val();
    if (numIn == "0" || numIn == "") {
        $("#quotesDisplay").hide();
        checkNums();
        return;
    }
    if (document.getElementById("quotesInput").validity.valid == false) {
        addRtLikeError();
    } else {
        removeRtLikeError();
    }

    let numOut = abbrNumber(numIn);
    $("#quotes").html(numOut);
    if (numOut == "1") {
        $("#quotesPlural").hide();
    } else {
        $("#quotesPlural").show();
    }
    $("#quotesDisplay").show();
    checkNums();
}

// likes
function handleLike() {
    let numIn = $("#likeInput").val();
    if (numIn == "0" || numIn == "") {
        $("#likesDisplay").hide();
        checkNums();
        return;
    }
    if (document.getElementById("likeInput").validity.valid == false) {
        addRtLikeError();
    } else {
        removeRtLikeError();
    }

    let numOut = abbrNumber(numIn);
    $("#likes").html(numOut);
    if (numOut == "1") {
        $("#likesPlural").hide();
    } else {
        $("#likesPlural").show();
    }
    $("#likesDisplay").show();
    checkNums();
}

// rt/like randomization
const randomRtVal = [69, 2, 531, 310, 2300, 1, 46, 32, 186, 17, 132, 35, 491, 32610, 64, 102, 203, 1009, 35, 186, 17234, 53420, 2504, 73512, 4, 5477, 4, 2503, 40333, 76, 1234, 6795, 1, 6, 166, 108, 140, 77, 969, 33, 3, 475, 9, 5577, 43, 6, 8, 87, 141, 315, 0, 10, 73, 18, 2419, 1314, 18969, 270, 2, 439, 9, 571, 1, 51];
const randomQuoteVal = [21, 2, 377, 214, 1988, 22, 24, 9, 79, 4, 25, 6, 66, 18928, 32, 30, 51, 5020, 4, 29, 1124, 22169, 834, 31132, 1, 1403, 0, 660, 11295, 14, 440, 792, 0, 3, 34, 21, 48, 17, 112, 10, 0, 94, 4, 212, 8, 1, 5, 18, 33, 124, 1, 72, 0, 4, 511, 175, 1213, 73, 0, 12, 2, 26, 2, 20];
const randomLikeVal = [420, 21, 7214, 4602, 6589, 18, 1734, 348, 3442, 73, 624, 214, 1880, 74787, 422, 3414, 6990, 1705, 127, 3720, 79536, 110669, 15671, 325360, 233, 57539, 70, 20441, 196946, 619, 7211, 19455, 18, 275, 1698, 2632, 481, 492, 5287, 220, 24, 2899, 26, 20315, 165, 52, 39, 1024, 11002, 1440, 1, 959, 596, 1211, 18748, 7808, 84696, 5194, 51, 8266, 1377, 5656, 70, 284];

function randomize() {
    let rn = Math.floor(Math.random() * 64);
    let randomRt = randomRtVal[rn];
    let randomQuote = randomQuoteVal[rn];
    let randomLike = randomLikeVal[rn];
    $("#retweetInput").val(randomRt);
    $("#quotesInput").val(randomQuote);
    $("#likeInput").val(randomLike);
    handleRetweet();
    handleQuotes();
    handleLike();
}

// client
function handleClient() {
    var clientIn = $("#clientInput").val()
    if (clientIn == "") {
        $("#clientDisplay").hide();
        return;
    }
    var clientOut = escapeHtml(clientIn);
    $("#client").html(clientOut);
    $("#clientDisplay").show();
    if (useTwemoji) twemoji.parse(document.getElementById("client"), {base: "/c/twemoji/assets/"});
}

// fact check warning
function handleDebunk() {
    let debunkIn = $("#debunkInput").val();
    if (!debunkIn) {
        $("#debunkDisplay").hide();
        return;
    } else {
        let debunkOut = escapeHtml(debunkIn);
        $("#debunkText").html(debunkOut);
        $("#debunkDisplay").show();
        if (useTwemoji) twemoji.parse(document.getElementById("debunkText"), {base: "/c/twemoji/assets/"});
    }
}

function generate() {
    $("#downloadButton").attr("disabled", true);
    $("#downloadButton").html('Please wait...');

    // Putting a delay here to let images load
    setTimeout(() => {
        const capture = document.getElementById("tweetInnerContainer");
        var bgColor = $("#tweetContainer").css("background-color");
    
        html2canvas(capture, {allowTaint: true, backgroundColor: bgColor, windowWidth: 640}).then(canvas => {
            canvas.toBlob(blob => {
                let src = URL.createObjectURL(blob);
                $("#imageOutput").attr("src", src);
                $("#generatedImageContainer").show();
                $("#downloadButton").attr("disabled", false);
                $("#downloadButton").html('<i class="fas fa-download"></i>  Generate Image');
            }, "image/png");
        });
    }, 500);
}